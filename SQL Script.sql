------------ 1. Identify population of newborns------------------------

--Identify 7821 unique babies with DIAGNOSIS=NEWBORN
CREATE TABLE NEWBORNLIST AS
SELECT DISTINCT(SUBJECT_ID)
FROM ADMISSIONS
WHERE (DIAGNOSIS == 'NEWBORN')

--Check all newborns have been identified by selecting all patients who are less than 2 days old,7847 in total
CREATE TABLE NEWBORNLIST2 AS
WITH NEWBORNTIME AS(
SELECT PATIENTS.SUBJECT_ID, HADM_ID,ADMITTIME,DOB, CAST(ROUND(julianday(ADMISSIONS.ADMITTIME) - julianday(PATIENTS.DOB)) as INTEGER) AS AGE
FROM PATIENTS
LEFT JOIN ADMISSIONS
ON PATIENTS.SUBJECT_ID=ADMISSIONS.SUBJECT_ID
WHERE AGE<2)
SELECT DISTINCT(NEWBORNTIME.SUBJECT_ID)
FROM NEWBORNTIME

--Combine methods to get single list of newborns, gives 7580 in total
CREATE TABLE FINALNEWBORNLIST AS
SELECT NEWBORNLIST.SUBJECT_ID
FROM NEWBORNLIST
UNION
SELECT NEWBORNLIST2.SUBJECT_ID
FROM NEWBORNLIST2

------------ 1. Exploratory data analysis ------------------------

--- Double check whether all babies admitted to ICU (they are)
--- Check how many times newborns admitted to ICU, 7859 just once, 108 twice
WITH NUMICUSTAYS as (WITH NEWBORNICU AS(
SELECT FINALNEWBORNLIST.SUBJECT_ID, HADM_ID, ICUSTAY_ID, LOS
FROM FINALNEWBORNLIST
LEFT JOIN ICUSTAYS
ON FINALNEWBORNLIST.SUBJECT_ID=ICUSTAYS.SUBJECT_ID)
SELECT SUBJECT_ID, COUNT(HADM_ID) AS COUNTHADM
FROM NEWBORNICU
GROUP BY(HADM_ID))
SELECT COUNTHADM, COUNT(COUNTHADM)
FROM NUMICUSTAYS
GROUP BY (COUNTHADM)

--- Identify diagnoses of babies
SELECT FINALNEWBORNLIST.SUBJECT_ID, HADM_ID, DIAGNOSES_ICD.ICD9_CODE, SHORT_TITLE, LONG_TITLE
FROM FINALNEWBORNLIST
LEFT JOIN DIAGNOSES_ICD
ON FINALNEWBORNLIST.SUBJECT_ID= DIAGNOSES_ICD.SUBJECT_ID
LEFT JOIN D_ICD_DIAGNOSES
ON D_ICD_DIAGNOSES.ICD9_CODE=DIAGNOSES_ICD.ICD9_CODE

-- Identify most common diagnoses of babies
-- Most common codes are for need for prophylactic vaccination for hepatitis (5757), suspected infection 5491), preterm delivery (2243)
SELECT LONG_TITLE,COUNT(LONG_TITLE) AS NUMBERDIAGNOSES
FROM NEWBORNLIST
LEFT JOIN DIAGNOSES_ICD
ON NEWBORNLIST.SUBJECT_ID= DIAGNOSES_ICD.SUBJECT_ID
LEFT JOIN D_ICD_DIAGNOSES
ON D_ICD_DIAGNOSES.ICD9_CODE=DIAGNOSES_ICD.ICD9_CODE
GROUP BY LONG_TITLE
ORDER BY NUMBERDIAGNOSES DESC

----------------------- 3 Identify babies with normal delivery and by C-section ----------------------------------------

--Babies not born C-section*/
CREATE TABLE NON_CSECTION_LIST AS
SELECT FINALNEWBORNLIST.SUBJECT_ID
FROM FINALNEWBORNLIST
LEFT JOIN DIAGNOSES_ICD
ON FINALNEWBORNLIST.SUBJECT_ID= DIAGNOSES_ICD.SUBJECT_ID
LEFT JOIN D_ICD_DIAGNOSES
ON D_ICD_DIAGNOSES.ICD9_CODE=DIAGNOSES_ICD.ICD9_CODE
WHERE D_ICD_DIAGNOSES.ICD9_CODE== 'V3000'

/* Babies born C-section*/
CREATE TABLE CSECTION_LIST AS
SELECT FINALNEWBORNLIST.SUBJECT_ID
FROM FINALNEWBORNLIST
LEFT JOIN DIAGNOSES_ICD
ON FINALNEWBORNLIST.SUBJECT_ID= DIAGNOSES_ICD.SUBJECT_ID
LEFT JOIN D_ICD_DIAGNOSES
ON D_ICD_DIAGNOSES.ICD9_CODE=DIAGNOSES_ICD.ICD9_CODE
WHERE D_ICD_DIAGNOSES.ICD9_CODE== 'V3001'

--- Join C-section and normal delivery tables together
CREATE TABLE FULL_DELIVERY_LIST AS
SELECT SUBJECT_ID, 'CSECTION' as DELIVERY_TYPE
FROM CSECTION_LIST
UNION
SELECT SUBJECT_ID, 'NORMAL' as DELIVERY_TYPE
FROM NON_CSECTION_LIST

--- Remove records of any babies which died (36 babies)
--- 6288 entries in total
CREATE TABLE FULL_DELIVERY_LIST_CLEANED AS
SELECT FULL_DELIVERY_LIST.SUBJECT_ID, DELIVERY_TYPE
FROM FULL_DELIVERY_LIST
LEFT JOIN PATIENTS
ON FULL_DELIVERY_LIST.SUBJECT_ID=PATIENTS.SUBJECT_ID
WHERE EXPIRE_FLAG!=1

-------------------------- 4. Join with relevant CHARTEVENT data, height, weight etc.-----------------------------
-- Identify gestational age
--- Difference included to stop time travelling patients....presumably there are errors in the records
-- Only 2965 patients have gestational age but maybe possible to enrich the data from other fields
CREATE TABLE GESTATIONAL_AGE AS 
SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, ADMISSIONS.HADM_ID, MIN(CHARTTIME), VALUE, ADMITTIME, DELIVERY_TYPE,
julianday(CHARTEVENTS.CHARTTIME)-julianday(ADMISSIONS.ADMITTIME) AS DIFFERENCE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ADMISSIONS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= ADMISSIONS.SUBJECT_ID
LEFT JOIN CHARTEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= CHARTEVENTS.SUBJECT_ID
WHERE (ITEMID=3446 AND VALUE IS NOT NULL) AND DIFFERENCE>0 -- ITEMID=Gestational Age
GROUP BY ADMISSIONS.HADM_ID

-- Identify birth weight
CREATE TABLE BIRTH_WEIGHT AS
SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, MIN(CHARTTIME),DELIVERY_TYPE,VALUE AS VALUE_4183,'' AS VALUE_3723, '' AS VALUE_3580,
julianday(CHARTEVENTS.CHARTTIME)-julianday(ADMISSIONS.ADMITTIME) AS DIFFERENCE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ADMISSIONS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= ADMISSIONS.SUBJECT_ID
LEFT JOIN CHARTEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=CHARTEVENTS.SUBJECT_ID
WHERE (ITEMID=4183 AND VALUE IS NOT NULL) AND DIFFERENCE>=0 -- ITEMID='Birthweight (kg)'
GROUP BY ADMISSIONS.HADM_ID
-- 848 patients have values for ITEMID=4183, 'Birthweight (kg)'

UNION 

SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, MIN(CHARTTIME),DELIVERY_TYPE, '' AS VALUE_4183,VALUE AS VALUE_3723, '' AS VALUE_3580,
julianday(CHARTEVENTS.CHARTTIME)-julianday(ADMISSIONS.ADMITTIME) AS DIFFERENCE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ADMISSIONS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= ADMISSIONS.SUBJECT_ID
LEFT JOIN CHARTEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=CHARTEVENTS.SUBJECT_ID
WHERE (ITEMID=3723 AND VALUE IS NOT NULL) AND DIFFERENCE>0 -- ITEMID=3723, 'Birth Weight (kg)'
GROUP BY ADMISSIONS.HADM_ID
-- 4800 patients have values for ITEMID=3723, 'Birth Weight (kg)'
-- Some of the weights seem suspiciously low, but perhaps the infants are very premature

UNION

SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, MIN(CHARTTIME),DELIVERY_TYPE,'' AS VALUE_4183,'' AS VALUE_3723, VALUE AS VALUE_3580,
julianday(CHARTEVENTS.CHARTTIME)-julianday(ADMISSIONS.ADMITTIME) AS DIFFERENCE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ADMISSIONS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= ADMISSIONS.SUBJECT_ID
LEFT JOIN CHARTEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=CHARTEVENTS.SUBJECT_ID
WHERE (ITEMID=3580 AND VALUE IS NOT NULL) AND DIFFERENCE>=0 -- TEMID=3580, 'Present Weight (kg)'
GROUP BY ADMISSIONS.HADM_ID
-- 4800 patients have values for ITEMID=3580, 'Present Weight (kg)'
-- 3061 patients returned after negative values have been removed

-- Identify abdominal girth of babies
CREATE TABLE ABDOMINAL_GIRTH AS
SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, MIN(CHARTTIME),DELIVERY_TYPE,VALUE AS VALUE_3294,
julianday(CHARTEVENTS.CHARTTIME)-julianday(ADMISSIONS.ADMITTIME) AS DIFFERENCE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ADMISSIONS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= ADMISSIONS.SUBJECT_ID
LEFT JOIN CHARTEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=CHARTEVENTS.SUBJECT_ID
WHERE (ITEMID=3294 AND VALUE IS NOT NULL) AND DIFFERENCE>=0 -- TEMID=3294, 'Abdominal Girth (cm)'
GROUP BY ADMISSIONS.HADM_ID
-- 1969 patients have values for ITEMID=3294, 'Abdominal Girth (cm)' or maybe 2007...

-- Identify length of babies
CREATE TABLE LENGTH AS
SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, MIN(CHARTTIME),DELIVERY_TYPE,VALUE AS BABY_LENGTH,
julianday(CHARTEVENTS.CHARTTIME)-julianday(ADMISSIONS.ADMITTIME) AS DIFFERENCE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ADMISSIONS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= ADMISSIONS.SUBJECT_ID
LEFT JOIN CHARTEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=CHARTEVENTS.SUBJECT_ID
WHERE (ITEMID=4188 AND VALUE IS NOT NULL) AND DIFFERENCE>=0 -- ITEMID=4188, 'Length in cm'
GROUP BY ADMISSIONS.HADM_ID
-- 2569 patients have values for ITEMID=4188, 'Length in cm'

-- Identify head circumference
CREATE TABLE HEAD_CIRCUMFERENCE AS
SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, MIN(CHARTTIME),DELIVERY_TYPE,VALUE AS BABY_LENGTH,
julianday(CHARTEVENTS.CHARTTIME)-julianday(ADMISSIONS.ADMITTIME) AS DIFFERENCE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ADMISSIONS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= ADMISSIONS.SUBJECT_ID
LEFT JOIN CHARTEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=CHARTEVENTS.SUBJECT_ID
WHERE (ITEMID=3451 AND VALUE IS NOT NULL) AND DIFFERENCE>=0 -- ITEMID=3451, 'Head Circ (cm)'
GROUP BY ADMISSIONS.HADM_ID

-- Add social determinants of health
-- Why are there so many patients with private health insurance and language is NULL
-- It looks like these patients are foreigners
CREATE TABLE SOCIAL_DETERMINANTS_HEALTH AS
SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, LANGUAGE, RELIGION, INSURANCE, ETHNICITY, DIAGNOSIS, LANGUAGE, DELIVERY_TYPE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ADMISSIONS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=ADMISSIONS.SUBJECT_ID

-- Add other health data directly available from tables e.g. ICD9 codes and length of stay in ICU
CREATE TABLE FULL_DIAGNOSES AS
SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, LOS, SHORT_TITLE, LONG_TITLE, DELIVERY_TYPE, DIAGNOSES_ICD.ICD9_CODE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ICUSTAYS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=ICUSTAYS.SUBJECT_ID
LEFT JOIN DIAGNOSES_ICD
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=DIAGNOSES_ICD.SUBJECT_ID
LEFT JOIN D_ICD_DIAGNOSES
ON DIAGNOSES_ICD.ICD9_CODE=D_ICD_DIAGNOSES.ICD9_CODE

-------------------------- 4. Identify Medical Notes to get information about mothers-----------------------------

CREATE TABLE DISCHARGE_SUMMARIES AS
SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, CATEGORY, DESCRIPTION, TEXT
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN NOTEEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=NOTEEVENTS.SUBJECT_ID
WHERE CATEGORY='Discharge summary'

-------------------------- 4. Miscellaneous Code -----------------------------

SELECT DISTINCT(FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID)
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN CHARTEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID=CHARTEVENTS.SUBJECT_ID
WHERE (ITEMID=3580 AND VALUE IS NOT NULL)

CREATE TABLE GESTATIONAL_AGE AS 
SELECT FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID, ADMISSIONS.HADM_ID, MIN(CHARTTIME), VALUE, ADMITTIME, DELIVERY_TYPE,
julianday(CHARTEVENTS.CHARTTIME)-julianday(ADMISSIONS.ADMITTIME) AS DIFFERENCE
FROM FULL_DELIVERY_LIST_CLEANED
LEFT JOIN ADMISSIONS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= ADMISSIONS.SUBJECT_ID
LEFT JOIN CHARTEVENTS
ON FULL_DELIVERY_LIST_CLEANED.SUBJECT_ID= CHARTEVENTS.SUBJECT_ID
WHERE (ITEMID=3446 AND VALUE IS NOT NULL) AND DIFFERENCE>0 -- ITEMID=Gestational Age
GROUP BY ADMISSIONS.HADM_ID

SELECT ADMISSION_LOCATION, COUNT(ADMISSION_LOCATION) AS AD_LOCATION
FROM CSECTION_LIST
LEFT JOIN ADMISSIONS
ON CSECTION_LIST.SUBJECT_ID= ADMISSIONS.SUBJECT_ID
GROUP BY ADMISSION_LOCATION

CREATE TABLE DISCHARGE_SUMMARIES AS
SELECT CSECTION_LIST.SUBJECT_ID, CATEGORY, DESCRIPTION, TEXT
FROM CSECTION_LIST 
LEFT JOIN NOTEEVENTS
ON CSECTION_LIST.SUBJECT_ID=NOTEEVENTS.SUBJECT_ID
WHERE CATEGORY='Discharge summary'

SELECT CATEGORY, COUNT(CATEGORY)
FROM CSECTION_LIST 
LEFT JOIN NOTEEVENTS
ON CSECTION_LIST.SUBJECT_ID=NOTEEVENTS.SUBJECT_ID
GROUP BY CATEGORY

SELECT LABEL, COUNT(LABEL)
FROM CSECTION_LIST
LEFT JOIN CHARTEVENTS
ON CSECTION_LIST.SUBJECT_ID=CHARTEVENTS.SUBJECT_ID
LEFT JOIN D_ITEMS
ON D_ITEMS.ITEMID=CHARTEVENTS.ITEMID
GROUP BY(LABEL)





